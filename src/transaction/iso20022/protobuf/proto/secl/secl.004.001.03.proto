//----------------------------------------------------------------------
// Copyright (C) 2018  openeft.org
// Copyright (C) Reza Schadmani <reza.schadmani@openeft.org>
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//----------------------------------------------------------------------

message UnspecifiedType
{
	required string baseObjectType = 1;
	required bytes object = 2;
}

message DateAndDateTimeChoice
{
	optional int32 Dt = 1;
	optional int64 DtTm = 2;
}

message SupplementaryDataEnvelope1
{
}

message Pagination
{
	required string PgNb = 1;
	required bool LastPgInd = 2;
}

message ReportParameters1
{
	required string NetPosId = 1;
	required DateAndDateTimeChoice RptDtAndTm = 2;
	enum StatementUpdateType1Code
	{
		StatementUpdateType1Code_COMP = 1;
		StatementUpdateType1Code_DELT = 2;
	}
	required StatementUpdateType1Code UpdTp = 3;
	enum EventFrequency6Code
	{
		EventFrequency6Code_DAIL = 1;
		EventFrequency6Code_INDA = 2;
		EventFrequency6Code_ONDE = 3;
	}
	required EventFrequency6Code Frqcy = 4;
	optional string RptNb = 5;
	required bool ActvtyInd = 6;
}

message SafekeepingPlaceTypeAndAnyBICIdentifier1
{
	enum SafekeepingPlace1Code
	{
		SafekeepingPlace1Code_CUST = 1;
		SafekeepingPlace1Code_ICSD = 2;
		SafekeepingPlace1Code_NCSD = 3;
		SafekeepingPlace1Code_SHHE = 4;
	}
	required SafekeepingPlace1Code SfkpgPlcTp = 1;
	required string Id = 2;
}

message ActiveOrHistoricCurrencyAndAmount
{
	required string Ccy = 1;
}

message GenericIdentification40
{
	required string Id = 1;
	required string Issr = 2;
	optional string SchmeNm = 3;
}

message SupplementaryData1
{
	optional string PlcAndNm = 1;
	required SupplementaryDataEnvelope1 Envlp = 2;
}

message IdentificationSource3Choice
{
	optional string Cd = 1;
	optional string Prtry = 2;
}

message PostalAddress8
{
	enum AddressType2Code
	{
		AddressType2Code_ADDR = 1;
		AddressType2Code_BIZZ = 2;
		AddressType2Code_DLVY = 3;
		AddressType2Code_HOME = 4;
		AddressType2Code_MLTO = 5;
		AddressType2Code_PBOX = 6;
	}
	optional AddressType2Code AdrTp = 1;
	repeated string AdrLine = 2;
	optional string StrtNm = 3;
	optional string BldgNb = 4;
	optional string PstCd = 5;
	optional string TwnNm = 6;
	optional string CtrySubDvsn = 7;
	required string Ctry = 8;
}

message ActiveOrHistoricCurrencyAnd13DecimalAmount
{
	required string Ccy = 1;
}

message PostalAddress1
{
	enum AddressType2Code
	{
		AddressType2Code_ADDR = 1;
		AddressType2Code_BIZZ = 2;
		AddressType2Code_DLVY = 3;
		AddressType2Code_HOME = 4;
		AddressType2Code_MLTO = 5;
		AddressType2Code_PBOX = 6;
	}
	optional AddressType2Code AdrTp = 1;
	repeated string AdrLine = 2;
	optional string StrtNm = 3;
	optional string BldgNb = 4;
	optional string PstCd = 5;
	optional string TwnNm = 6;
	optional string CtrySubDvsn = 7;
	required string Ctry = 8;
}

message PostalAddress2
{
	optional string StrtNm = 1;
	required string PstCdId = 2;
	required string TwnNm = 3;
	optional string CtrySubDvsn = 4;
	required string Ctry = 5;
}

message FinancialInstrumentQuantity1Choice
{
	optional double Unit = 1;
	optional double FaceAmt = 2;
	optional double AmtsdVal = 3;
}

message PartyTextInformation1
{
	optional string DclrtnDtls = 1;
	optional string PtyCtctDtls = 2;
	optional string RegnDtls = 3;
}

message OtherIdentification1
{
	required string Id = 1;
	optional string Sfx = 2;
	required IdentificationSource3Choice Tp = 3;
}

message GenericIdentification30
{
	required string Id = 1;
	required string Issr = 2;
	optional string SchmeNm = 3;
}

message NameAndAddress5
{
	required string Nm = 1;
	optional PostalAddress1 Adr = 2;
}

message NameAndAddress6
{
	required string Nm = 1;
	required PostalAddress2 Adr = 2;
}

message SafekeepingPlaceTypeAndText1
{
	enum SafekeepingPlace3Code
	{
		SafekeepingPlace3Code_SHHE = 1;
	}
	required SafekeepingPlace3Code SfkpgPlcTp = 1;
	optional string Id = 2;
}

message SecuritiesAccount18
{
	required string Id = 1;
	enum ClearingAccountType1Code
	{
		ClearingAccountType1Code_CLIE = 1;
		ClearingAccountType1Code_HOUS = 2;
		ClearingAccountType1Code_LIPR = 3;
	}
	required ClearingAccountType1Code Tp = 2;
	optional string Nm = 3;
}

message SecuritiesAccount19
{
	required string Id = 1;
	optional GenericIdentification30 Tp = 2;
	optional string Nm = 3;
}

message MarketIdentification1Choice
{
	optional string MktIdrCd = 1;
	optional string Desc = 2;
}

message GenericIdentification20
{
	required string Id = 1;
	required string Issr = 2;
	optional string SchmeNm = 3;
}

message AmountAndDirection21
{
	required ActiveOrHistoricCurrencyAndAmount Amt = 1;
	enum CreditDebitCode
	{
		CreditDebitCode_CRDT = 1;
		CreditDebitCode_DBIT = 2;
	}
	optional CreditDebitCode CdtDbtInd = 2;
}

message GenericIdentification29
{
	required string Id = 1;
	required string Issr = 2;
	optional string SchmeNm = 3;
}

message SecurityIdentification14
{
	optional string ISIN = 1;
	repeated OtherIdentification1 OthrId = 2;
	optional string Desc = 3;
}

message NameAndAddress13
{
	required string Nm = 1;
	optional PostalAddress8 Adr = 2;
}

message PartyIdentification35Choice
{
	optional string BIC = 1;
	optional GenericIdentification29 PrtryId = 2;
}

message MarketType8Choice
{
	enum MarketType2Code
	{
		MarketType2Code_EXCH = 1;
		MarketType2Code_OTCO = 2;
		MarketType2Code_PRIM = 3;
		MarketType2Code_SECM = 4;
		MarketType2Code_VARI = 5;
	}
	optional MarketType2Code Cd = 1;
	optional GenericIdentification30 Prtry = 2;
}

message GenericIdentification58
{
	optional string Id = 1;
	required GenericIdentification40 Tp = 2;
}

message IdentificationType6Choice
{
	enum TypeOfIdentification1Code
	{
		TypeOfIdentification1Code_ARNU = 1;
		TypeOfIdentification1Code_CCPT = 2;
		TypeOfIdentification1Code_CHTY = 3;
		TypeOfIdentification1Code_CORP = 4;
		TypeOfIdentification1Code_DRLC = 5;
		TypeOfIdentification1Code_FIIN = 6;
		TypeOfIdentification1Code_TXID = 7;
	}
	optional TypeOfIdentification1Code Cd = 1;
	optional GenericIdentification30 Prtry = 2;
}

message AlternatePartyIdentification4
{
	required IdentificationType6Choice IdTp = 1;
	required string Ctry = 2;
	required string AltrnId = 3;
}

message PartyIdentification34Choice
{
	optional string BIC = 1;
	optional NameAndAddress5 NmAndAdr = 2;
	optional string Ctry = 3;
}

message PriceRateOrAmountChoice
{
	optional double Rate = 1;
	optional ActiveOrHistoricCurrencyAnd13DecimalAmount Amt = 2;
}

message MarketType9Choice
{
	enum MarketType5Code
	{
		MarketType5Code_EXCH = 1;
		MarketType5Code_OTCO = 2;
	}
	optional MarketType5Code Cd = 1;
	optional GenericIdentification30 Prtry = 2;
}

message SafekeepingPlaceFormat7Choice
{
	optional SafekeepingPlaceTypeAndText1 Id = 1;
	optional string Ctry = 2;
	optional SafekeepingPlaceTypeAndAnyBICIdentifier1 TpAndId = 3;
	optional GenericIdentification58 Prtry = 4;
}

message Price4
{
	required PriceRateOrAmountChoice Val = 1;
	enum PriceValueType7Code
	{
		PriceValueType7Code_ABSO = 1;
		PriceValueType7Code_ACTU = 2;
		PriceValueType7Code_DISC = 3;
		PriceValueType7Code_FICT = 4;
		PriceValueType7Code_PARV = 5;
		PriceValueType7Code_PEUN = 6;
		PriceValueType7Code_PRCT = 7;
		PriceValueType7Code_PREM = 8;
		PriceValueType7Code_SPRE = 9;
		PriceValueType7Code_TEDP = 10;
		PriceValueType7Code_TEDY = 11;
		PriceValueType7Code_VACT = 12;
		PriceValueType7Code_YIEL = 13;
	}
	optional PriceValueType7Code Tp = 2;
}

message DateCode3Choice
{
	enum DateType1Code
	{
		DateType1Code_UKWN = 1;
	}
	optional DateType1Code Cd = 1;
	optional GenericIdentification20 Prtry = 2;
}

message PartyIdentification83Choice
{
	optional string AnyBIC = 1;
	optional GenericIdentification29 PrtryId = 2;
	optional NameAndAddress13 NmAndAdr = 3;
}

message DateFormat15Choice
{
	optional int32 Dt = 1;
	optional DateCode3Choice DtCd = 2;
}

message IdentificationType40Choice
{
	enum TypeOfIdentification2Code
	{
		TypeOfIdentification2Code_ARNU = 1;
		TypeOfIdentification2Code_CHTY = 2;
		TypeOfIdentification2Code_CORP = 3;
		TypeOfIdentification2Code_FIIN = 4;
		TypeOfIdentification2Code_TXID = 5;
	}
	optional TypeOfIdentification2Code Cd = 1;
	optional GenericIdentification29 Prtry = 2;
}

message MarketIdentification20
{
	optional MarketIdentification1Choice Id = 1;
	required MarketType8Choice Tp = 2;
}

message PartyIdentification33Choice
{
	optional string AnyBIC = 1;
	optional GenericIdentification29 PrtryId = 2;
	optional NameAndAddress6 NmAndAdr = 3;
}

message MarketIdentification85
{
	optional MarketIdentification1Choice Id = 1;
	required MarketType9Choice Tp = 2;
}

message MarketIdentification84
{
	optional MarketIdentification1Choice Id = 1;
	required MarketType8Choice Tp = 2;
}

message PartyIdentificationAndAccount31
{
	required PartyIdentification33Choice Id = 1;
	optional AlternatePartyIdentification4 AltrnId = 2;
	optional PartyTextInformation1 AddtlInf = 3;
	optional SecuritiesAccount18 ClrAcct = 4;
}

message AlternatePartyIdentification5
{
	required IdentificationType40Choice IdTp = 1;
	required string Ctry = 2;
	required string AltrnId = 3;
}

message PartyIdentificationAndAccount100
{
	required PartyIdentification83Choice Id = 1;
	optional AlternatePartyIdentification5 AltrnId = 2;
	optional string SfkpgAcct = 3;
	optional string PrcgId = 4;
	optional PartyTextInformation1 AddtlInf = 5;
}

message TradeLeg10
{
	required string TradLegId = 1;
	optional string TradId = 2;
	required string TradExctnId = 3;
	optional string OrdrId = 4;
	optional string AllcnId = 5;
	required int32 TradDt = 6;
	optional int64 TxDtAndTm = 7;
	required DateFormat15Choice SttlmDt = 8;
	optional string TradgCcy = 9;
	enum Side1Code
	{
		Side1Code_BUMI = 1;
		Side1Code_BUYI = 2;
		Side1Code_CROS = 3;
		Side1Code_CRSH = 4;
		Side1Code_CSHE = 5;
		Side1Code_DEFI = 6;
		Side1Code_OPPO = 7;
		Side1Code_SELL = 8;
		Side1Code_SEPL = 9;
		Side1Code_SESH = 10;
		Side1Code_SSEX = 11;
		Side1Code_TWOS = 12;
		Side1Code_UNDI = 13;
	}
	required Side1Code BuySellInd = 10;
	required FinancialInstrumentQuantity1Choice TradQty = 11;
	required Price4 DealPric = 12;
	optional AmountAndDirection21 GrssAmt = 13;
	required MarketIdentification84 PlcOfTrad = 14;
	optional MarketIdentification85 PlcOfListg = 15;
	enum TradeType1Code
	{
		TradeType1Code_BKTR = 1;
		TradeType1Code_COTR = 2;
		TradeType1Code_GUTR = 3;
		TradeType1Code_LKTR = 4;
		TradeType1Code_OFBK = 5;
		TradeType1Code_OOBK = 6;
	}
	required TradeType1Code TradTp = 16;
	optional bool DerivRltdTrad = 17;
	optional PartyIdentificationAndAccount100 Brkr = 18;
	required PartyIdentification35Choice TradgPty = 19;
	optional string TradRegnOrgn = 20;
	optional SecuritiesAccount19 TradgPtyAcct = 21;
	enum TradingCapacity5Code
	{
		TradingCapacity5Code_AGEN = 1;
		TradingCapacity5Code_PRIN = 2;
		TradingCapacity5Code_RISP = 3;
	}
	required TradingCapacity5Code TradgCpcty = 22;
	enum TradePosting1Code
	{
		TradePosting1Code_GROS = 1;
		TradePosting1Code_NETT = 2;
	}
	optional TradePosting1Code TradPstngCd = 23;
	optional SafekeepingPlaceFormat7Choice SfkpgPlc = 24;
	optional SecuritiesAccount19 SfkpgAcct = 25;
}

message NetPosition3
{
	required SecuritiesAccount18 ClrAcct = 1;
	optional PartyIdentificationAndAccount31 NonClrMmb = 2;
	optional SecuritiesAccount19 DlvryAcct = 3;
	required SecurityIdentification14 FinInstrmId = 4;
	optional AmountAndDirection21 InitlPosAmt = 5;
	required AmountAndDirection21 NetPosAmt = 6;
	optional AmountAndDirection21 AcrdIntrstAmt = 7;
	optional Price4 AvrgDealPric = 8;
	required FinancialInstrumentQuantity1Choice NetQty = 9;
	enum ReceiveDelivery1Code
	{
		ReceiveDelivery1Code_DELI = 1;
		ReceiveDelivery1Code_RECE = 2;
	}
	required ReceiveDelivery1Code SctiesMvmntTp = 10;
	required PartyIdentification34Choice Dpstry = 11;
	enum TradingCapacity5Code
	{
		TradingCapacity5Code_AGEN = 1;
		TradingCapacity5Code_PRIN = 2;
		TradingCapacity5Code_RISP = 3;
	}
	optional TradingCapacity5Code TradgCpcty = 12;
	optional MarketIdentification20 PlcOfTrad = 13;
	optional int32 TradDt = 14;
	optional DateFormat15Choice SttlmDt = 15;
	repeated TradeLeg10 TradLegDtls = 16;
}

message NetPositionV03
{
	required ReportParameters1 RptParams = 1;
	required Pagination Pgntn = 2;
	required PartyIdentification35Choice ClrMmb = 3;
	optional PartyIdentification35Choice ClrSgmt = 4;
	repeated NetPosition3 NetPosRpt = 5;
	repeated SupplementaryData1 SplmtryData = 6;
}

message Document
{
	required NetPositionV03 NetPos = 1;
}


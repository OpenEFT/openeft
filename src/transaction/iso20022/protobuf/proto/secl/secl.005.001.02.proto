//----------------------------------------------------------------------
// Copyright (C) 2018  openeft.org
// Copyright (C) Reza Schadmani <reza.schadmani@openeft.org>
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
//----------------------------------------------------------------------

message UnspecifiedType
{
	required string baseObjectType = 1;
	required bytes object = 2;
}

message DateAndDateTimeChoice
{
	optional int32 Dt = 1;
	optional int64 DtTm = 2;
}

message SupplementaryDataEnvelope1
{
}

message Pagination
{
	required string PgNb = 1;
	required bool LastPgInd = 2;
}

message PartyTextInformation1
{
	optional string DclrtnDtls = 1;
	optional string PtyCtctDtls = 2;
	optional string RegnDtls = 3;
}

message GenericIdentification30
{
	required string Id = 1;
	required string Issr = 2;
	optional string SchmeNm = 3;
}

message ReportParameters3
{
	required string RptId = 1;
	required DateAndDateTimeChoice RptDtAndTm = 2;
	required string RptCcy = 3;
	required int64 ClctnDtAndTm = 4;
	enum EventFrequency6Code
	{
		EventFrequency6Code_DAIL = 1;
		EventFrequency6Code_INDA = 2;
		EventFrequency6Code_ONDE = 3;
	}
	required EventFrequency6Code Frqcy = 5;
	optional string RptNb = 6;
}

message SecuritiesAccount18
{
	required string Id = 1;
	enum ClearingAccountType1Code
	{
		ClearingAccountType1Code_CLIE = 1;
		ClearingAccountType1Code_HOUS = 2;
		ClearingAccountType1Code_LIPR = 3;
	}
	required ClearingAccountType1Code Tp = 2;
	optional string Nm = 3;
}

message IdentificationType6Choice
{
	enum TypeOfIdentification1Code
	{
		TypeOfIdentification1Code_ARNU = 1;
		TypeOfIdentification1Code_CCPT = 2;
		TypeOfIdentification1Code_CHTY = 3;
		TypeOfIdentification1Code_CORP = 4;
		TypeOfIdentification1Code_DRLC = 5;
		TypeOfIdentification1Code_FIIN = 6;
		TypeOfIdentification1Code_TXID = 7;
	}
	optional TypeOfIdentification1Code Cd = 1;
	optional GenericIdentification30 Prtry = 2;
}

message ActiveOrHistoricCurrencyAndAmount
{
	required string Ccy = 1;
}

message AlternatePartyIdentification4
{
	required IdentificationType6Choice IdTp = 1;
	required string Ctry = 2;
	required string AltrnId = 3;
}

message MarginProductType1Choice
{
	enum MarginProduct1Code
	{
		MarginProduct1Code_EQUI = 1;
		MarginProduct1Code_FIXI = 2;
	}
	optional MarginProduct1Code Cd = 1;
	optional GenericIdentification30 Prtry = 2;
}

message ActiveCurrencyAndAmount
{
	required string Ccy = 1;
}

message SupplementaryData1
{
	optional string PlcAndNm = 1;
	required SupplementaryDataEnvelope1 Envlp = 2;
}

message MarginType1Choice
{
	enum MarginType1Code
	{
		MarginType1Code_ADFM = 1;
		MarginType1Code_CEMA = 2;
		MarginType1Code_COMA = 3;
		MarginType1Code_INCA = 4;
		MarginType1Code_INDE = 5;
		MarginType1Code_INMA = 6;
		MarginType1Code_NEMA = 7;
		MarginType1Code_SCMA = 8;
		MarginType1Code_SEMA = 9;
		MarginType1Code_UFMA = 10;
		MarginType1Code_VAMA = 11;
	}
	optional MarginType1Code Cd = 1;
	optional GenericIdentification30 Prtry = 2;
}

message AmountAndDirection20
{
	required ActiveOrHistoricCurrencyAndAmount Amt = 1;
	enum CreditDebitCode
	{
		CreditDebitCode_CRDT = 1;
		CreditDebitCode_DBIT = 2;
	}
	optional CreditDebitCode CdtDbtInd = 2;
}

message IdentificationSource3Choice
{
	optional string Cd = 1;
	optional string Prtry = 2;
}

message GenericIdentification29
{
	required string Id = 1;
	required string Issr = 2;
	optional string SchmeNm = 3;
}

message MarginResult1Choice
{
	optional ActiveCurrencyAndAmount XcssAmt = 1;
	optional ActiveCurrencyAndAmount DfcitAmt = 2;
}

message Collateral6
{
	required ActiveCurrencyAndAmount PstHrcutVal = 1;
	required ActiveCurrencyAndAmount MktVal = 2;
	enum CollateralType1Code
	{
		CollateralType1Code_CASH = 1;
		CollateralType1Code_LCRE = 2;
		CollateralType1Code_OTHR = 3;
		CollateralType1Code_SECU = 4;
	}
	required CollateralType1Code CollTp = 3;
}

message PostalAddress2
{
	optional string StrtNm = 1;
	required string PstCdId = 2;
	required string TwnNm = 3;
	optional string CtrySubDvsn = 4;
	required string Ctry = 5;
}

message MarginCalculation1
{
	required AmountAndDirection20 TtlMrgnAmt = 1;
	repeated Collateral6 CollOnDpst = 2;
	optional ActiveCurrencyAndAmount MinRqrmntDpst = 3;
	optional MarginResult1Choice MrgnRslt = 4;
}

message OtherIdentification1
{
	required string Id = 1;
	optional string Sfx = 2;
	required IdentificationSource3Choice Tp = 3;
}

message SecurityIdentification14
{
	optional string ISIN = 1;
	repeated OtherIdentification1 OthrId = 2;
	optional string Desc = 3;
}

message NameAndAddress6
{
	required string Nm = 1;
	required PostalAddress2 Adr = 2;
}

message PartyIdentification35Choice
{
	optional string BIC = 1;
	optional GenericIdentification29 PrtryId = 2;
}

message PartyIdentification33Choice
{
	optional string AnyBIC = 1;
	optional GenericIdentification29 PrtryId = 2;
	optional NameAndAddress6 NmAndAdr = 3;
}

message Amount2
{
	optional ActiveCurrencyAndAmount OrgnlCcyAmt = 1;
	required double RptgAmt = 2;
}

message TotalVariationMargin1
{
	enum ShortLong1Code
	{
		ShortLong1Code_LONG = 1;
		ShortLong1Code_SHOR = 2;
	}
	optional ShortLong1Code ShrtLngInd = 1;
	required Amount2 AmtDtls = 2;
}

message PartyIdentificationAndAccount31
{
	required PartyIdentification33Choice Id = 1;
	optional AlternatePartyIdentification4 AltrnId = 2;
	optional PartyTextInformation1 AddtlInf = 3;
	optional SecuritiesAccount18 ClrAcct = 4;
}

message Margin4
{
	required MarginType1Choice Tp = 1;
	required Amount2 Amt = 2;
	enum CreditDebitCode
	{
		CreditDebitCode_CRDT = 1;
		CreditDebitCode_DBIT = 2;
	}
	optional CreditDebitCode CdtDbtInd = 3;
}

message VariationMargin3
{
	optional SecurityIdentification14 FinInstrmId = 1;
	repeated TotalVariationMargin1 TtlVartnMrgn = 2;
	required Amount2 TtlMrkToMkt = 3;
	repeated Amount2 MrkToMktNetd = 4;
	repeated Amount2 MrkToMktGrss = 5;
	repeated Amount2 MrkToMktFls = 6;
	optional Amount2 FlsHrcut = 7;
}

message Margin3
{
	optional Amount2 InitlMrgn = 1;
	repeated VariationMargin3 VartnMrgn = 2;
	repeated Margin4 OthrMrgn = 3;
}

message MarginCalculation2
{
	optional SecurityIdentification14 FinInstrmId = 1;
	optional Amount2 XpsrAmt = 2;
	required AmountAndDirection20 TtlMrgnAmt = 3;
	repeated Collateral6 CollOnDpst = 4;
	optional ActiveCurrencyAndAmount MinRqrmntDpst = 5;
	optional MarginResult1Choice MrgnRslt = 6;
	optional Margin3 MrgnTpAmt = 7;
}

message MarginReport2
{
	repeated MarginProductType1Choice MrgnPdct = 1;
	required SecuritiesAccount18 MrgnAcct = 2;
	optional bool CollsdMrgnAcctInd = 3;
	repeated PartyIdentificationAndAccount31 NonClrMmb = 4;
	optional MarginCalculation1 MrgnClctnSummry = 5;
	repeated MarginCalculation2 MrgnClctn = 6;
}

message MarginReportV02
{
	required ReportParameters3 RptParams = 1;
	required Pagination Pgntn = 2;
	required PartyIdentification35Choice ClrMmb = 3;
	optional MarginCalculation1 RptSummry = 4;
	repeated MarginReport2 RptDtls = 5;
	repeated SupplementaryData1 SplmtryData = 6;
}

message Document
{
	required MarginReportV02 MrgnRpt = 1;
}

